{"version":3,"sources":["assets/sound1.mp3","components/Shade.js","components/Shades.js","components/ShadeInput.js","App.js","index.js"],"names":["module","exports","Shade","shade","onColorCopy","useState","copied","setCopied","useEffect","interval","setInterval","clearInterval","text","hexString","onCopy","className","style","backgroundColor","Shades","color","audioRef","useRef","shades","setShades","isColor","createShades","Values","console","log","rgbString","current","play","ref","src","require","map","ShadeInput","onInputChange","type","onChange","e","target","value","placeholder","App","setColor","randomColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,oC,yHCmC5BC,EAhCD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACZC,oBAAS,GADG,mBACjCC,EADiC,KACzBC,EADyB,KAGxCC,qBAAU,WACR,IAAIC,EAMJ,OALc,GAAVH,IACFG,EAAWC,aAAY,WACrBH,GAAU,KACT,OAEE,WACLI,cAAcF,MAEf,CAACH,IAMJ,OACE,kBAAC,kBAAD,CAAiBM,KAAMT,EAAMU,YAAaC,OAAQ,kBAJlDP,GAAU,QACVH,MAIE,yBAAKW,UAAU,QAAQC,MAAO,CAAEC,gBAAiBd,EAAMU,cACpDP,EACC,0BAAMS,UAAU,UAAhB,WAEA,8BAAOZ,EAAMU,gB,gBCKRK,EA5BA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACVC,EAAWC,mBADW,EAEAhB,mBAAS,IAFT,mBAErBiB,EAFqB,KAEbC,EAFa,KAG5Bf,qBAAU,WACJgB,IAAQL,IAAQM,EAAaN,KAChC,CAACA,IAEJ,IAAMM,EAAe,SAACN,GACpB,IACIG,EADiB,IAAII,IAAOP,GACNG,OAAO,GACjCK,QAAQC,IAAIN,EAAO,GAAGO,aAEtBN,EAAUD,IAGNlB,EAAc,WAClBgB,EAASU,QAAQC,QAEnB,OACE,yBAAKhB,UAAU,UACb,2BAAOiB,IAAKZ,EAAUa,IAAKC,EAAQ,MAClCZ,EAAOa,KAAI,SAAChC,GAAD,OACV,kBAAC,EAAD,CAAOA,MAAOA,EAAOC,YAAaA,S,gBCT3BgC,EAhBI,SAAC,GAA8B,IAA5BjB,EAA2B,EAA3BA,MAAOkB,EAAoB,EAApBA,cAC3B,OACE,yBAAKtB,UAAU,gBACb,yBAAKA,UAAU,UAAf,gBACA,2BACEuB,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOH,EAAcG,EAAEC,OAAOC,QACxCA,MAAOvB,EACPJ,UAAU,cACV4B,YAAY,wBAEd,yBAAK5B,UAAU,UAAf,kECWS6B,MAlBf,WAAgB,IAAD,EACavC,mBAAS,QADtB,mBACNc,EADM,KACC0B,EADD,KAUb,OAPArC,qBAAU,WACRqC,EAASC,SACR,IAMD,yBAAK/B,UAAU,OACb,kBAAC,EAAD,CAAYI,MAAOA,EAAOkB,cALR,SAACK,GACrBG,EAASH,MAKP,kBAAC,EAAD,CAAQvB,MAAOA,MCdrB4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.aac9f2a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound1.5d1a7c95.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst Shade = ({ shade, onColorCopy }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (copied == true) {\r\n      interval = setInterval(() => {\r\n        setCopied(false);\r\n      }, 1500);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [copied]);\r\n\r\n  const onCopy = () => {\r\n    setCopied(true);\r\n    onColorCopy();\r\n  };\r\n  return (\r\n    <CopyToClipboard text={shade.hexString()} onCopy={() => onCopy()}>\r\n      <div className=\"shade\" style={{ backgroundColor: shade.hexString() }}>\r\n        {copied ? (\r\n          <span className=\"copied\">copied!</span>\r\n        ) : (\r\n          <span>{shade.hexString()}</span>\r\n        )}\r\n      </div>\r\n    </CopyToClipboard>\r\n  );\r\n};\r\n\r\nexport default Shade;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Values from \"values.js\";\r\nimport Shade from \"./Shade\";\r\nimport isColor from \"is-color\";\r\n\r\nconst Shades = ({ color }) => {\r\n  const audioRef = useRef();\r\n  const [shades, setShades] = useState([]);\r\n  useEffect(() => {\r\n    if (isColor(color)) createShades(color);\r\n  }, [color]);\r\n\r\n  const createShades = (color) => {\r\n    const shades_color = new Values(color);\r\n    let shades = shades_color.shades(1);\r\n    console.log(shades[0].rgbString());\r\n\r\n    setShades(shades);\r\n  };\r\n\r\n  const onColorCopy = () => {\r\n    audioRef.current.play();\r\n  };\r\n  return (\r\n    <div className=\"shades\">\r\n      <audio ref={audioRef} src={require(\"../assets/sound1.mp3\")} />\r\n      {shades.map((shade) => (\r\n        <Shade shade={shade} onColorCopy={onColorCopy} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shades;\r\n","import React from \"react\";\r\n\r\nconst ShadeInput = ({ color, onInputChange }) => {\r\n  return (\r\n    <div className=\"shade-search\">\r\n      <div className=\"emojis\">Color Shades</div>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => onInputChange(e.target.value)}\r\n        value={color}\r\n        className=\"shade-input\"\r\n        placeholder=\"type any colour !!!\"\r\n      />\r\n      <div className=\"emojis\">ðŸŽ¨ðŸŽ¨ðŸŽ¨ðŸŽ¨ðŸŽ¨</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShadeInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Shades from \"./components/Shades\";\r\n\r\nimport randomColor from \"randomcolor\";\r\nimport ShadeInput from \"./components/ShadeInput\";\r\nfunction App() {\r\n  const [color, setColor] = useState(\"#000\");\r\n\r\n  useEffect(() => {\r\n    setColor(randomColor());\r\n  }, []);\r\n\r\n  const onInputChange = (value) => {\r\n    setColor(value);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <ShadeInput color={color} onInputChange={onInputChange} />\r\n      <Shades color={color} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}